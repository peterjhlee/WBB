/***************************************************************************;
** PROGRAM TITLE     : 
** PROGRAM LOCATION  : 
** SAS VERSION	     : 9.3
****************************************************************************;
**PROGRAM DESCRIPTION:	
	- 
****************************************************************************;
** ORIGINAL INPUT FILES:

** OUTPUT FILES:
** RELEVANT SOURCE(S): 
	- 	  
****************************************************************************;
** CREATED BY / DATE : P. Lee <DATE>
** AUDITED BY / DATE : 	

** UPDATED BY / DATE :
** UPDATE EXPLANATION : 
** AUDITED BY / DATE :
****************************************************************************/


proc datasets lib=work nolist kill; quit;  *gets rid of everything in Work library;
options compress=no mprint nolabel spool mlogic;
dm "log; 'clear'; output; 'clear'";

**********************
options 
   mprint  /*displays the SAS statements that are generated by macro execution. The SAS statements are useful for debugging macros*/
   compress=no  /*specifies that the observations in a newly created SAS data set are uncompressed (fixed-length records).*/
   nolabel; /*specifies that SAS procedures cannot use labels with variables. If NOLABEL is specified, the LABEL option of a procedure is ignored.*/
   dm /*stands for Display Manager*/
/*******************/



**************************************************
START PROGRAM HERE!
**************************************************;

data import_usc;
	infile "C:\Users\pejhlee\Desktop\USC2.csv" firstobs=2 missover dsd lrecl=50000;
	informat 
		usc $46. 
		time $35. 
		score $6. 
		del2 $3. 
		del3 $2. 
		stanford $41.
	;
	input    
		usc $ 
		time 
		score $ 
		del2 $ 
		del3 $ 
		stanford $;
	format   
		usc $46. 
		time $35.
		score $6. 
		del2 $3. 
		del3 $2. 
		stanford $41.;
	run;

data clean_usc;
	set import_usc (drop = time del2 del3);
	usc = upcase(usc);
	score = upcase(score);
	stanford = upcase(stanford);
	if usc = "" and stanford = "" then delete;
run;

data words;
	set clean_usc;
	usc_sub = substr(usc, 1, 5);
	stanford_sub = substr(stanford, 1, 5);
run;

proc freq data = words noprint;
	tables usc_sub / out = freq_usc; *options nocum nofreq nopercent;
run;

proc sort data = freq_usc;
	by count;
run;

data words2;
	set words;
	if usc_sub in ("","MISSE","REBOU","GOOD!","SUB O","SUB I",'STEAL','FOUL','TURNO','ASSIS','BLOCK','3RD P');
	stanford_sub = tranwrd(stanford_sub, "0 ", "");
	stanford_sub = tranwrd(stanford_sub, " ", "");
	usc_sub2 = substr(usc, 1, 10);
	stanford_sub2 = substr(stanford, 1, 10);
run;

proc freq data = words2 noprint;
	tables usc_sub2 / out = play_freq; *options nocum nofreq nopercent;
run;

proc sort data = PLAY_FREQ out = sort_test; by usc_sub2; run;



data poss;
	retain poss;
	set words2;
	poss = "usc";
	usc_sub2 = substr(usc, 1, 10);
	if usc_sub2 in ('REBOUND (O') then poss = "usc";
		else if usc_sub in ('GOOD!','ASSIS','MISSE','TURNO') then poss = "usc";
		else if usc_sub in ('BLOCK', 'FOUL ') then poss = "sta";
		else if usc_sub in ('SUB I','SUB O') then poss = "SUB";
		else if stanford_sub in ('SUB I','SUB O') then poss = "SUB";
		else if stanford_sub in ('STEAL') then poss = "sta";
		else if stanford_sub2 in ('MISSED FT ') then poss = "sta";
		else if stanford_sub in ('BLOCK', 'FOUL ') then poss = "usc";
		else if stanford_sub2 in ('REBOUND (D') then poss = "usc";
	else poss = "sta";
RUN;

data poss_count;
	retain poss poss_last poss_count;
	set poss;
	retain poss_last;
	output;
	poss_last = poss;
run;

data poss_count2;
	set poss_count;
	if poss ~= poss_last then poss_count = 1;
		else poss_count = 0;
run;
