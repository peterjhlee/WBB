/***************************************************************************;
** PROGRAM TITLE     : 
** PROGRAM LOCATION  : 
** SAS VERSION	     : 9.3
****************************************************************************;
**PROGRAM DESCRIPTION:	
	- 
****************************************************************************;
** ORIGINAL INPUT FILES:

** OUTPUT FILES:
** RELEVANT SOURCE(S): 
	- 	  
****************************************************************************;
** CREATED BY / DATE : P. Lee <DATE>
** AUDITED BY / DATE : 	

** UPDATED BY / DATE :
** UPDATE EXPLANATION : 
** AUDITED BY / DATE :
****************************************************************************/


proc datasets lib=work nolist kill; quit;  *gets rid of everything in Work library;
options compress=no mprint nolabel spool mlogic;
dm "log; 'clear'; output; 'clear'";

**********************
options 
   mprint  /*displays the SAS statements that are generated by macro execution. The SAS statements are useful for debugging macros*/
   compress=no  /*specifies that the observations in a newly created SAS data set are uncompressed (fixed-length records).*/
   nolabel; /*specifies that SAS procedures cannot use labels with variables. If NOLABEL is specified, the LABEL option of a procedure is ignored.*/
   dm /*stands for Display Manager*/
/*******************/



**************************************************
START PROGRAM HERE!
**************************************************;

data a_import_usc;
	infile "C:\Users\pejhlee\Desktop\USC_test.csv" firstobs=2 missover dsd lrecl=50000;
	informat 
		usc $46. 
		time $5. 
		score $6. 
		del2 $3. 
		del3 $2. 
		stanford $41.
	;
	input    
		usc $ 
		time 
		score $ 
		del2 $ 
		del3 $ 
		stanford $;
	format   
		usc $46. 
		time $5.
		score $6. 
		del2 $3. 
		del3 $2. 
		stanford $41.;
	run;

* clean data - upcase, delete blank rows, format date;
data b0_clean_usc;
	set a_import_usc (drop = del2 del3 score);
	usc = upcase(usc);
	stanford = upcase(stanford);
	if usc = "" and stanford = "" then delete;
	date = 20475;
	format date mmddyy10.;
run;

* set substrings to take out all other rows, set periods;
data b1_clean_usc;
	set b0_clean_usc;
	usc_sub = substr(usc, 1, 5);
	stanford_sub = substr(stanford, 1, 5);
	if usc_sub in ("","MISSE","REBOU","GOOD!","SUB O","SUB I",'STEAL','FOUL','TURNO','ASSIS','BLOCK','1ST P','2ND P','3RD P','4TH P');
	stanford_sub = tranwrd(stanford_sub, "0 ", "");
	stanford_sub = tranwrd(stanford_sub, " ", "");
	usc_sub2 = substr(usc, 1, 10);
	if substr(usc,5,11) ~= "PERIOD-ONLY";
	stanford_sub2 = substr(stanford, 1, 10);
	if substr(usc,1,3) = '1ST' then period = 1;
	else if substr(usc,1,3) = '2ND' then period = 2;
	else if substr(usc,1,3) = '3RD' then period = 3;
	else if substr(usc,1,3) = '4TH' then period = 4;
run;

* filled in blank periods with correct period;
data b2_clean_usc;
	set b1_clean_usc;
	retain period2;
	if period ~= . then period2 = period;
	else period = period2;
	drop period2;
	if usc_sub not in ('1ST P','2ND P','3RD P','4TH P');
run;


* set time correctly to calculate time;
data b3_clean_usc;
retain date time usc stanford usb_sub stanford_sub usc_sub2 stanford_usb2 time_min2 time_sec time_game;
	informat time_min 2.
		   time_sec 2.;
	format time_min 2.
		   time_sec 2.;
		set b2_clean_usc;
		if substr(time,1,2) = "10" then time_min = 10;
		else time_min = substr(time,1,1);
		if substr(time,1,2) = "10" then time_sec = substr(time,4,5);
		else time_sec = substr(time,3,4);
		if period = 1 and time_min = 10 then time_min2 = 40;
		else if period = 1 and time_min ~= 10 then time_min2 = time_min + 30;
		else if period = 2 and time_min = 10 then time_min2 = 30;
		else if period = 2 and time_min ~= 10 then time_min2 = time_min + 20;
		else if period = 3 and time_min = 10 then time_min2 = 20;
		else if period = 3 and time_min ~= 10 then time_min2 = time_min + 10;
		else time_min2 = time_min; 
		time_game = time_min2*60 + time_sec;
		drop time_min;
run;


* set possession data;
data b4_clean_usc;
	retain poss;
	set b3_clean_usc;
	poss = "usc";
	usc_sub2 = substr(usc, 1, 10);
	if usc_sub2 in ('REBOUND (O') then poss = "usc";
		else if usc_sub in ('GOOD!','ASSIS','MISSE','TURNO') then poss = "usc";
		else if usc_sub in ('BLOCK', 'FOUL ') then poss = "sta";
		else if usc_sub in ('SUB I','SUB O') then poss = "SUB";
		else if stanford_sub in ('SUB I','SUB O') then poss = "SUB";
		else if stanford_sub in ('STEAL') then poss = "sta";
		else if stanford_sub2 in ('MISSED FT ') then poss = "sta";
		else if stanford_sub in ('BLOCK', 'FOUL ') then poss = "usc";
		else if stanford_sub2 in ('REBOUND (D') then poss = "usc";
	else poss = "sta";
RUN;

* count possessions;
data b5_1_clean_usc;
	retain poss poss_last1;
	set b4_clean_usc;
	retain poss_last1;
	output;
	poss_last1 = poss;
run;

* run macro to count last up to 10 possessions for accurate possession counting when there are subs;
%macro poss(new, old);
data b5_&new._clean_usc;
	set b5_&old._clean_usc;
	retain poss_last&new;
	output;
	poss_last&new = poss_last&old;
run;
%mend;

%poss(2,1)
%poss(3,2)
%poss(4,3)
%poss(5,4)
%poss(6,5)
%poss(7,6)
%poss(8,7)
%poss(9,8)
%poss(10,9)

* set possession counter;
data b6_clean_usc;
retain poss poss_last1 poss_last2 poss_last3 poss_last4 poss_last5 poss_last6 poss_count;
	set b5_10_clean_usc;
	if poss ~= poss_last1 then poss_count = 1;
		else poss_count = 0;
	if poss = "SUB" then poss_count = 0;

* following is for substitutions possesions;

%macro poss_count(team1,team2,num1,num2);
	if poss = &team1 and poss_last&num1 = 'SUB' and poss_last&num2 = &team1 then poss_count = 0;
	else if poss = &team1 and poss_last&num1 = 'SUB' and poss_last&num1 = &team2 then poss_count = 1;
	*else if poss = ;
%mend;

%poss_count('usc','sta',2,3);
%poss_count('sta','usc',2,3);
%poss_count('usc','sta',4,5);
%poss_count('sta','usc',4,5);
%poss_count('usc','sta',6,7);
%poss_count('sta','usc',6,7);
%poss_count('usc','sta',8,9);
%poss_count('sta','usc',8,9);

run;


proc sql;
     create table test as
     select poss, poss_last, poss_count, period, time, usc, stanford
     from b6_clean_usc
	 where poss_count = 1;
quit;

proc sort data = test; by poss; run;
proc freq data = test noprint;
	tables poss_count / out = test3; *options nocum nofreq nopercent;
	by poss;
run;

proc sql;
     create table test2 as
     select poss, poss_count, sum(poss_count) as totposs
     from b6_clean_usc 
	 where poss in ('sta')
;
quit;


**** 1/29 UPDATE:
got possessions accurately counted.

to do:
- scoring for each team
- when subs are rotated in and out - how to do make sure we know who's in the game for stanford.
;
